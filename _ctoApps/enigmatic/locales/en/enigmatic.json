{
  "BUTTON_CANCEL": "Cancel",
  "CALCULATION": "Calculation",
  "CHANGE_INPUT": "Change input",
  "CHANGE_IV": "Change initial vector",
  "CHANGE_KEY": "Change key",
  "CHANGE_PERMUTATION": "Change permutation",
  "CHANGE_SBOX": "Change S-Box",
  "CONFIGURATION": "Configuration",
  "CONFIGURATION_INTRO": "<p>The configuration of the Engima cipher machine has three parts:</p><ol><li>The wheels with overflows and offsets (via the whell rings),</li><li>The reflector wheel, and</li><li>The plugboard.</li></ol><p>Parts of the configuration can be treated as public knowledge or as part of the key.",
  "DECODED": "Decoded",
  "DECODING_ROUNDS": "Decoding/Encoding rounds",
  "ENCODED": "Encoded",
  "ENCODING_INPUT_CHAR": "Encoding/Decoding input character $1 to $2 at position $3",
  "ENCODING_ROUNDS": "Encoding/Decoding rounds",
  "EXPANDED_KEY": "Expanded xey",
  "INITIAL_VECTOR": "Initial vector (CBC only)",
  "INPUT": "Input",
  "INPUT_WRONG_LEN": "Input must be ## bytes long",
  "INTRO": "Inspect the encryption and decryption of the Enigma cipher machine step by step.",
  "INVALID_BYTE_SEQUENCE": "Invalid byte sequence entered",
  "KEY": "Key",
  "LANG": "en",
  "NO_CHAINING": "None",
  "NON_STANDARD_CONF": "Current configuration is impossible with a physical (standard) enigma",
  "NOT_VALID_HEX": "'##' is not a valid hex digit",
  "NOT_THREE_WHEELS": "Standard Enigma must have three, not ## wheels",
  "NOT_STD_WHEEL": "Wheel ## is not a standard permutation",
  "NOT_STD_OVERFLOW": "Overflows of wheel ## are no standard overflows",
  "ANOMAL_WHEEL": "Wheel ## has overflow anomaly",
  "NOT_ANOMAL_WHEEL": "Wheel ## don't has overflow anomaly",
  "NOT_STD_REFLECTOR": "Reflector is not a standard reflector",
  "MULTIPLE_USE_OF_STD_WHEEL": "Wheel ## is used multiple times",
  "NUMBER_OF_ROUNDS": "Number of rounds:",
  "PLUGBOARD": "Plugboard",
  "PLUGBOARD_INTRO": "<p>You can swap additional letters.</p>",
  "REFLECTOR": "Reflector Wheel",
  "REFLECTOR_INTRO": "<p>The reflector wheel must map each letter to a different one. Otherwise all encryption steps will be undone on the way back.</p>",
  "REFLECTOR_PRESET": "Standard reflector wheels",
  "REFLECTOR_SWAPS": "Letter swaps",
  "REFLECTOR_WHEEL": "Resulting wheel permutation",
  "ROUND": "Round",
  "STEP_BACKWARD": "Backward: $$",
  "STEP_INPUT": "Forward: input = $$",
  "STEP_OUTPUT": " = Output",
  "STEP_PLUGBOARD": " -[Plugboard]-> $$",
  "STEP_REFLECTOR": " --[Reflector]--> $$",
  "STEP_WHEEL": " --[Wheel $1]--> $2",
  "USED_SUBKEY": "Used subkey:",
  "WHEEL": "Wheel $$",
  "WHEEL_ADD": "Add wheel",
  "WHEEL_ADVANCEMENT": "Turned wheel from $1 to $2",
  "WHEEL_ANOMAL": "Wheel will be turned if left sibling turns",
  "WHEEL_DELETE": "Remove last wheel",
  "WHEEL_OFFSET": "Offset",
  "WHEEL_OVERFLOWS": "Overflows",
  "WHEEL_PERMUTATION": "Permutation",
  "WHEEL_PRESET": "Standard wheels",
  "WHEELS": "Wheels",
  "WHEELS_INTRO": "<p>Each wheel is the permutation of the letters.  There are five permutations provided but you can create your own as long as it is a real permutation (doing so you leave the default executions of the historical Enigmas). The permutation can be offset to increase the number of possible wheels to use (instead of 5 you have 5 &times; 26).</p><p>Additionally you must specify at which letter an overflow to the next wheel will happen.</p><p>The offset allows to rotate the permutations relative to the alphabet. With offset 1 no shifting takes place. With offset 2 B will be used instead of A, C instead of B and so on.</p>"
}
